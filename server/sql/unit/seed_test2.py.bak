#python seed_test.py > seed_test.sql

#Then run seed_test.sql in the db.

from datetime import datetime, timedelta
import random


std_bins=range(12, 26)
std_bins.extend(range(30, 44))

fan_bins=[10, 27, 28, 45]
burner_bins=[11, 26, 29, 44]

s_outside=9
s_fan = 10
s_burner = 11
s_vfs = 12
s_top = 13
s_bottom = 14

d_id=1
s_id=1
addr=100

reading_info=[]

for fan_bin in fan_bins:
	#AB
	print "INSERT INTO device (id, device_type_id, name, address, port, bin_id, bin_section_id) VALUES ("+str(d_id)+", 14, 'AB', "+str(addr)+", 0, "+str(fan_bin)+", "+str(s_fan)+");"
	print "INSERT INTO sensor (id, device_id, sensor_type_id) VALUES ("+str(s_id)+", "+str(d_id)+", 50);"
	reading_info.append([fan_bin, s_fan, 50])
	s_id+=1
	print "INSERT INTO sensor (id, device_id, sensor_type_id) VALUES ("+str(s_id)+", "+str(d_id)+", 51);"
	reading_info.append([fan_bin, s_fan, 51])
	s_id+=1
	addr+=1
	d_id+=1

	#EA Tach
	print "INSERT INTO device (id, device_type_id, name, address, port, bin_id, bin_section_id) VALUES ("+str(d_id)+", 13, 'EA Tach', "+str(addr)+", 5, "+str(fan_bin)+", "+str(s_fan)+");"
	addr+=1
	print "INSERT INTO sensor (id, device_id, sensor_type_id) VALUES ("+str(s_id)+", "+str(d_id)+", 40);"
	reading_info.append([fan_bin, s_fan, 40])
	s_id+=1
	d_id+=1

for burner_bin in burner_bins:
	#Fuji
	print "INSERT INTO device (id, device_type_id, name, address, port, bin_id, bin_section_id) VALUES ("+str(d_id)+", 11, 'NA', "+str(addr)+", 0, "+str(burner_bin)+", "+str(s_burner)+");"
	print "INSERT INTO sensor (id, device_id, sensor_type_id) VALUES ("+str(s_id)+", "+str(d_id)+", 20);"
	reading_info.append([burner_bin, s_burner, 20])
	s_id+=1
	print "INSERT INTO sensor (id, device_id, sensor_type_id) VALUES ("+str(s_id)+", "+str(d_id)+", 21);"
	reading_info.append([burner_bin, s_burner, 21])
	s_id+=1
	addr+=1
	d_id+=1

	#Sensor unit
	print "INSERT INTO device (id, device_type_id, name, address, port, bin_id, bin_section_id) VALUES ("+str(d_id)+", 10, 'NA', "+str(addr)+", 5, "+str(burner_bin)+", "+str(s_burner)+");"
	print "INSERT INTO sensor (id, device_id, sensor_type_id) VALUES ("+str(s_id)+", "+str(d_id)+", 10);"
	reading_info.append([burner_bin, s_burner, 10])
	s_id+=1
	print "INSERT INTO sensor (id, device_id, sensor_type_id) VALUES ("+str(s_id)+", "+str(d_id)+", 11);"
	reading_info.append([burner_bin, s_burner, 11])
	s_id+=1
	addr+=1
	d_id+=1

#Outside bin
print "INSERT INTO device (id, device_type_id, name, address, port, bin_id, bin_section_id) VALUES ("+str(d_id)+", 10, 'NA', "+str(addr)+", 5, 9, "+str(s_outside)+");"
print "INSERT INTO sensor (id, device_id, sensor_type_id) VALUES ("+str(s_id)+", "+str(d_id)+", 10);"
reading_info.append([9, s_bottom, 10])
s_id+=1
print "INSERT INTO sensor (id, device_id, sensor_type_id) VALUES ("+str(s_id)+", "+str(d_id)+", 11);"
reading_info.append([9, s_bottom, 11])
s_id+=1
addr+=1
d_id+=1


for abin in std_bins:
	#Sensor unit - top
	print "INSERT INTO device (id, device_type_id, name, address, port, bin_id, bin_section_id) VALUES ("+str(d_id)+", 10, 'NA', "+str(addr)+", 1, "+str(abin)+", "+str(s_top)+");"
	print "INSERT INTO sensor (id, device_id, sensor_type_id) VALUES ("+str(s_id)+", "+str(d_id)+", 10);"
	reading_info.append([abin, s_top, 10])
	s_id+=1
	print "INSERT INTO sensor (id, device_id, sensor_type_id) VALUES ("+str(s_id)+", "+str(d_id)+", 11);"
	reading_info.append([abin, s_top, 11])
	s_id+=1
	print "INSERT INTO sensor (id, device_id, sensor_type_id) VALUES ("+str(s_id)+", "+str(d_id)+", 12);"
	reading_info.append([abin, s_top, 12])
	s_id+=1
	print "INSERT INTO sensor (id, device_id, sensor_type_id) VALUES ("+str(s_id)+", "+str(d_id)+", 13);"
	reading_info.append([abin, s_top, 13])
	s_id+=1
	addr+=1
	d_id+=1

	#Sensor unit - bottom 
	print "INSERT INTO device (id, device_type_id, name, address, port, bin_id, bin_section_id) VALUES ("+str(d_id)+", 10, 'NA', "+str(addr)+", 2, "+str(abin)+", "+str(s_bottom)+");"
	print "INSERT INTO sensor (id, device_id, sensor_type_id) VALUES ("+str(s_id)+", "+str(d_id)+", 10);"
	reading_info.append([abin, s_bottom, 10])
	s_id+=1
	print "INSERT INTO sensor (id, device_id, sensor_type_id) VALUES ("+str(s_id)+", "+str(d_id)+", 11);"
	reading_info.append([abin, s_bottom, 11])
	s_id+=1
	addr+=1
	d_id+=1


#Readings
t = datetime.now() - timedelta(hours=9)
rdid = 1;
for i in xrange(99):
	t=t+timedelta(minutes=5)
	print "INSERT INTO reading (id, datetime) VALUES ("+str(i)+", TIMESTAMP '"+t.strftime('%Y-%m-%d %H:%M:%S')+"');"
	for r in reading_info:
		rv = random.random()*50.0+80.0
		if(r[2] == 13):
			rv=int(rv)%2
		print "INSERT INTO reading_data (reading_id, bin_id, bin_section_id, sensor_type_id, value) VALUES ("+str(i)+", "+str(r[0])+", "+str(r[1])+", "+str(r[2])+", "+str(rv)+");"
	
print "ALTER SEQUENCE sensor_seq RESTART "+str(s_id)+";";

##################################################
# insert alarms
##################################################

# no MID communication alarm for users 100-104
for u in range(100,105):
	print "INSERT INTO alarm (id,alarm_type_id,account_id) VALUES ("+str(u)+",10,"+str(u)+");"
print "INSERT INTO alarm (id,alarm_type_id,account_id) VALUES (110,10,104);"
print "INSERT INTO alarm (id,alarm_type_id,account_id) VALUES (111,10,103);"
print "INSERT INTO alarm (id,alarm_type_id,account_id) VALUES (112,10,103);"
print "INSERT INTO alarm (id,alarm_type_id,account_id) VALUES (113,10,101);"
print "INSERT INTO alarm (id,alarm_type_id,account_id) VALUES (114,10,104);"
print "INSERT INTO alarm (id,alarm_type_id,account_id) VALUES (115,10,104);"
print "ALTER SEQUENCE alarm_seq RESTART 116;"
# instance of no MID communication alarms
tstart = datetime.now() - timedelta(hours=5)
tend = datetime.now() - timedelta(hours=4)
print "INSERT INTO alarm_event (id,alarm_id, begin_datetime, end_datetime) VALUES (100,100, TIMESTAMP '"+tstart.strftime('%Y-%m-%d %H:%M:%S')+"', TIMESTAMP '"+tend.strftime('%Y-%m-%d %H:%M:%S')+"');"
print "ALTER SEQUENCE alarm_event_seq RESTART 101;"
# add contact methods of SMS and email for the three users for this alarm
acCounter = 100
for a in range(100,104):
	print "INSERT INTO alarm_contact (id,alarm_id,alarm_contact_type_id) VALUES ("+str(acCounter)+","+str(a)+",100);"
	acCounter+=1
	print "INSERT INTO alarm_contact (id,alarm_id,alarm_contact_type_id) VALUES ("+str(acCounter)+","+str(a)+",101);"
	acCounter+=1
print "ALTER SEQUENCE alarm_contact_seq RESTART "+str(acCounter)+";"

# add a couple fills to DB
tstart = datetime.now() - timedelta(hours=8)
tstartair = tstart + timedelta(minutes=20)
print "INSERT INTO fill (id,fill_number,filled_datetime,air_begin_datetime,rotation_number,bin_id,hybrid_code,field_code,truck) VALUES (100,1,TIMESTAMP '"+tstart.strftime('%Y-%m-%d %H:%M:%S')+"',TIMESTAMP '"+tstartair.strftime('%Y-%m-%d %H:%M:%S')+"',1,12,'hybrid1','field1','truck1');"
tstart = tstart + timedelta(minutes=45)
tstartair = tstart + timedelta(minutes=15)
print "INSERT INTO fill (id,fill_number,filled_datetime,air_begin_datetime,rotation_number,bin_id,hybrid_code,field_code,truck) VALUES (101,2,TIMESTAMP '"+tstart.strftime('%Y-%m-%d %H:%M:%S')+"',TIMESTAMP '"+tstartair.strftime('%Y-%m-%d %H:%M:%S')+"',1,13,'hybrid1','field1','truck1');"
print "ALTER SEQUENCE fill_seq RESTART 102;"

